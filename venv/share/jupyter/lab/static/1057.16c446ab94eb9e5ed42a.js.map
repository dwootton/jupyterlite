{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/lib0/array.js","webpack://@jupyterlab/application-top/./node_modules/lib0/function.js","webpack://@jupyterlab/application-top/./node_modules/lib0/map.js","webpack://@jupyterlab/application-top/./node_modules/lib0/math.js","webpack://@jupyterlab/application-top/./node_modules/lib0/object.js","webpack://@jupyterlab/application-top/./node_modules/lib0/observable.js","webpack://@jupyterlab/application-top/./node_modules/lib0/set.js","webpack://@jupyterlab/application-top/./node_modules/y-protocols/awareness.js"],"names":["last","arr","length","create","copy","a","slice","appendTo","dest","src","i","push","from","Array","every","f","some","equalFlat","b","item","index","flatten","reduce","acc","val","concat","isArray","unique","set","uniqueBy","mapper","happened","result","el","mapped","has","add","callAll","fs","args","nop","apply","id","equalityStrict","equalityFlat","constructor","equalityDeep","ArrayBuffer","Uint8Array","byteLength","Set","size","value","Map","key","keys","get","Object","isOneOf","options","includes","m","r","forEach","v","k","setIfUndefined","map","createT","undefined","res","any","all","floor","Math","ceil","abs","imul","round","log10","log2","log","sqrt","min","max","isNaN","Number","pow","exp10","exp","sign","isNegativeZero","n","assign","obj","results","isEmpty","_k","hasProperty","prototype","hasOwnProperty","call","Observable","this","_observers","on","name","once","_f","off","observers","delete","emit","values","destroy","toArray","first","next","entries","outdatedTimeout","Awareness","doc","super","clientID","states","meta","_checkInterval","setInterval","now","getLocalState","lastUpdated","setLocalState","remove","clientid","removeAwarenessStates","clearInterval","state","currLocalMeta","clock","prevState","added","updated","filteredUpdated","removed","setLocalStateField","field","getStates","awareness","clients","origin","curMeta","encodeAwarenessUpdate","len","encoder","JSON","stringify","modifyAwarenessUpdate","update","modify","decoder","decoding","createDecoder","encoding","createEncoder","readVarUint","writeVarUint","parse","readVarString","modifiedState","writeVarString","toUint8Array","applyAwarenessUpdate","timestamp","clientMeta","currClock"],"mappings":"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","file":"1057.16c446ab94eb9e5ed42a.js?v=16c446ab94eb9e5ed42a","sourcesContent":["/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\nimport * as set from './set.js'\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {ArrayLike<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n * @template {ArrayLike<ITEM>} ARR\n *\n * @param {ARR} arr\n * @param {function(ITEM, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (!f(arr[i], i, arr)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @template {ArrayLike<S>} ARR\n * @param {ARR} arr\n * @param {function(S, number, ARR):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (f(arr[i], i, arr)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @template ELEM\n *\n * @param {ArrayLike<ELEM>} a\n * @param {ArrayLike<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n\nexport const isArray = Array.isArray\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {Array<T>}\n */\nexport const unique = arr => from(set.from(arr))\n\n/**\n * @template T\n * @template M\n * @param {ArrayLike<T>} arr\n * @param {function(T):M} mapper\n * @return {Array<T>}\n */\nexport const uniqueBy = (arr, mapper) => {\n  /**\n   * @type {Set<M>}\n   */\n  const happened = set.create()\n  /**\n   * @type {Array<T>}\n   */\n  const result = []\n  for (let i = 0; i < arr.length; i++) {\n    const el = arr[i]\n    const mapped = mapper(el)\n    if (!happened.has(mapped)) {\n      happened.add(mapped)\n      result.push(el)\n    }\n  }\n  return result\n}\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n\n/**\n * @template V\n * @template {V} OPTS\n *\n * @param {V} value\n * @param {Array<OPTS>} options\n */\n// @ts-ignore\nexport const isOneOf = (value, options) => options.includes(value)\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object|undefined} obj\n */\nexport const isEmpty = obj => {\n  for (const _k in obj) {\n    return false\n  }\n  return true\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {T}\n */\nexport const first = set => {\n  return set.values().next().value || undefined\n}\n\n/**\n * @template T\n * @param {Iterable<T>} entries\n * @return {Set<T>}\n */\nexport const from = entries => {\n  return new Set(entries)\n}\n","/**\n * @module awareness-protocol\n */\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as time from 'lib0/time'\nimport * as math from 'lib0/math'\nimport { Observable } from 'lib0/observable'\nimport * as f from 'lib0/function'\nimport * as Y from 'yjs' // eslint-disable-line\n\nexport const outdatedTimeout = 30000\n\n/**\n * @typedef {Object} MetaClientState\n * @property {number} MetaClientState.clock\n * @property {number} MetaClientState.lastUpdated unix timestamp\n */\n\n/**\n * The Awareness class implements a simple shared state protocol that can be used for non-persistent data like awareness information\n * (cursor, username, status, ..). Each client can update its own local state and listen to state changes of\n * remote clients. Every client may set a state of a remote peer to `null` to mark the client as offline.\n *\n * Each client is identified by a unique client id (something we borrow from `doc.clientID`). A client can override\n * its own state by propagating a message with an increasing timestamp (`clock`). If such a message is received, it is\n * applied if the known state of that client is older than the new state (`clock < newClock`). If a client thinks that\n * a remote client is offline, it may propagate a message with\n * `{ clock: currentClientClock, state: null, client: remoteClient }`. If such a\n * message is received, and the known clock of that client equals the received clock, it will override the state with `null`.\n *\n * Before a client disconnects, it should propagate a `null` state with an updated clock.\n *\n * Awareness states must be updated every 30 seconds. Otherwise the Awareness instance will delete the client state.\n *\n * @extends {Observable<string>}\n */\nexport class Awareness extends Observable {\n  /**\n   * @param {Y.Doc} doc\n   */\n  constructor (doc) {\n    super()\n    this.doc = doc\n    /**\n     * @type {number}\n     */\n    this.clientID = doc.clientID\n    /**\n     * Maps from client id to client state\n     * @type {Map<number, Object<string, any>>}\n     */\n    this.states = new Map()\n    /**\n     * @type {Map<number, MetaClientState>}\n     */\n    this.meta = new Map()\n    this._checkInterval = /** @type {any} */ (setInterval(() => {\n      const now = time.getUnixTime()\n      if (this.getLocalState() !== null && (outdatedTimeout / 2 <= now - /** @type {{lastUpdated:number}} */ (this.meta.get(this.clientID)).lastUpdated)) {\n        // renew local clock\n        this.setLocalState(this.getLocalState())\n      }\n      /**\n       * @type {Array<number>}\n       */\n      const remove = []\n      this.meta.forEach((meta, clientid) => {\n        if (clientid !== this.clientID && outdatedTimeout <= now - meta.lastUpdated && this.states.has(clientid)) {\n          remove.push(clientid)\n        }\n      })\n      if (remove.length > 0) {\n        removeAwarenessStates(this, remove, 'timeout')\n      }\n    }, math.floor(outdatedTimeout / 10)))\n    doc.on('destroy', () => {\n      this.destroy()\n    })\n    this.setLocalState({})\n  }\n\n  destroy () {\n    this.emit('destroy', [this])\n    this.setLocalState(null)\n    super.destroy()\n    clearInterval(this._checkInterval)\n  }\n\n  /**\n   * @return {Object<string,any>|null}\n   */\n  getLocalState () {\n    return this.states.get(this.clientID) || null\n  }\n\n  /**\n   * @param {Object<string,any>|null} state\n   */\n  setLocalState (state) {\n    const clientID = this.clientID\n    const currLocalMeta = this.meta.get(clientID)\n    const clock = currLocalMeta === undefined ? 0 : currLocalMeta.clock + 1\n    const prevState = this.states.get(clientID)\n    if (state === null) {\n      this.states.delete(clientID)\n    } else {\n      this.states.set(clientID, state)\n    }\n    this.meta.set(clientID, {\n      clock,\n      lastUpdated: time.getUnixTime()\n    })\n    const added = []\n    const updated = []\n    const filteredUpdated = []\n    const removed = []\n    if (state === null) {\n      removed.push(clientID)\n    } else if (prevState == null) {\n      if (state != null) {\n        added.push(clientID)\n      }\n    } else {\n      updated.push(clientID)\n      if (!f.equalityDeep(prevState, state)) {\n        filteredUpdated.push(clientID)\n      }\n    }\n    if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n      this.emit('change', [{ added, updated: filteredUpdated, removed }, 'local'])\n    }\n    this.emit('update', [{ added, updated, removed }, 'local'])\n  }\n\n  /**\n   * @param {string} field\n   * @param {any} value\n   */\n  setLocalStateField (field, value) {\n    const state = this.getLocalState()\n    if (state !== null) {\n      this.setLocalState({\n        ...state,\n        [field]: value\n      })\n    }\n  }\n\n  /**\n   * @return {Map<number,Object<string,any>>}\n   */\n  getStates () {\n    return this.states\n  }\n}\n\n/**\n * Mark (remote) clients as inactive and remove them from the list of active peers.\n * This change will be propagated to remote clients.\n *\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @param {any} origin\n */\nexport const removeAwarenessStates = (awareness, clients, origin) => {\n  const removed = []\n  for (let i = 0; i < clients.length; i++) {\n    const clientID = clients[i]\n    if (awareness.states.has(clientID)) {\n      awareness.states.delete(clientID)\n      if (clientID === awareness.clientID) {\n        const curMeta = /** @type {MetaClientState} */ (awareness.meta.get(clientID))\n        awareness.meta.set(clientID, {\n          clock: curMeta.clock + 1,\n          lastUpdated: time.getUnixTime()\n        })\n      }\n      removed.push(clientID)\n    }\n  }\n  if (removed.length > 0) {\n    awareness.emit('change', [{ added: [], updated: [], removed }, origin])\n    awareness.emit('update', [{ added: [], updated: [], removed }, origin])\n  }\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Array<number>} clients\n * @return {Uint8Array}\n */\nexport const encodeAwarenessUpdate = (awareness, clients, states = awareness.states) => {\n  const len = clients.length\n  const encoder = encoding.createEncoder()\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = clients[i]\n    const state = states.get(clientID) || null\n    const clock = /** @type {MetaClientState} */ (awareness.meta.get(clientID)).clock\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(state))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Modify the content of an awareness update before re-encoding it to an awareness update.\n *\n * This might be useful when you have a central server that wants to ensure that clients\n * cant hijack somebody elses identity.\n *\n * @param {Uint8Array} update\n * @param {function(any):any} modify\n * @return {Uint8Array}\n */\nexport const modifyAwarenessUpdate = (update, modify) => {\n  const decoder = decoding.createDecoder(update)\n  const encoder = encoding.createEncoder()\n  const len = decoding.readVarUint(decoder)\n  encoding.writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    const clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const modifiedState = modify(state)\n    encoding.writeVarUint(encoder, clientID)\n    encoding.writeVarUint(encoder, clock)\n    encoding.writeVarString(encoder, JSON.stringify(modifiedState))\n  }\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * @param {Awareness} awareness\n * @param {Uint8Array} update\n * @param {any} origin This will be added to the emitted change event\n */\nexport const applyAwarenessUpdate = (awareness, update, origin) => {\n  const decoder = decoding.createDecoder(update)\n  const timestamp = time.getUnixTime()\n  const added = []\n  const updated = []\n  const filteredUpdated = []\n  const removed = []\n  const len = decoding.readVarUint(decoder)\n  for (let i = 0; i < len; i++) {\n    const clientID = decoding.readVarUint(decoder)\n    let clock = decoding.readVarUint(decoder)\n    const state = JSON.parse(decoding.readVarString(decoder))\n    const clientMeta = awareness.meta.get(clientID)\n    const prevState = awareness.states.get(clientID)\n    const currClock = clientMeta === undefined ? 0 : clientMeta.clock\n    if (currClock < clock || (currClock === clock && state === null && awareness.states.has(clientID))) {\n      if (state === null) {\n        // never let a remote client remove this local state\n        if (clientID === awareness.clientID && awareness.getLocalState() != null) {\n          // remote client removed the local state. Do not remote state. Broadcast a message indicating\n          // that this client still exists by increasing the clock\n          clock++\n        } else {\n          awareness.states.delete(clientID)\n        }\n      } else {\n        awareness.states.set(clientID, state)\n      }\n      awareness.meta.set(clientID, {\n        clock,\n        lastUpdated: timestamp\n      })\n      if (clientMeta === undefined && state !== null) {\n        added.push(clientID)\n      } else if (clientMeta !== undefined && state === null) {\n        removed.push(clientID)\n      } else if (state !== null) {\n        if (!f.equalityDeep(state, prevState)) {\n          filteredUpdated.push(clientID)\n        }\n        updated.push(clientID)\n      }\n    }\n  }\n  if (added.length > 0 || filteredUpdated.length > 0 || removed.length > 0) {\n    awareness.emit('change', [{\n      added, updated: filteredUpdated, removed\n    }, origin])\n  }\n  if (added.length > 0 || updated.length > 0 || removed.length > 0) {\n    awareness.emit('update', [{\n      added, updated, removed\n    }, origin])\n  }\n}\n"],"sourceRoot":""}